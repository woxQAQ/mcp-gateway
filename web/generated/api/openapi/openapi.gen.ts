/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * API Server
 * OpenAPI spec version: 0.1.0
 */
import type {
  BodyImportOpenapiApiV1OpenapiOpenapiImportPost,
  HTTPValidationError,
} from "../../types";

import { customInstance } from "../../../mutator";

/**
 * @summary Import Openapi
 */
export type importOpenapiApiV1OpenapiOpenapiImportPostResponse200 = {
  data: unknown;
  status: 200;
};

export type importOpenapiApiV1OpenapiOpenapiImportPostResponse422 = {
  data: HTTPValidationError;
  status: 422;
};

export type importOpenapiApiV1OpenapiOpenapiImportPostResponseComposite =
  | importOpenapiApiV1OpenapiOpenapiImportPostResponse200
  | importOpenapiApiV1OpenapiOpenapiImportPostResponse422;

export type importOpenapiApiV1OpenapiOpenapiImportPostResponse =
  importOpenapiApiV1OpenapiOpenapiImportPostResponseComposite & {
    headers: Headers;
  };

export const getImportOpenapiApiV1OpenapiOpenapiImportPostUrl = () => {
  return `/api/v1/openapi/openapi/import`;
};

export const importOpenapiApiV1OpenapiOpenapiImportPost = async (
  bodyImportOpenapiApiV1OpenapiOpenapiImportPost: BodyImportOpenapiApiV1OpenapiOpenapiImportPost,
  options?: RequestInit,
): Promise<importOpenapiApiV1OpenapiOpenapiImportPostResponse> => {
  const formData = new FormData();
  formData.append(`file`, bodyImportOpenapiApiV1OpenapiOpenapiImportPost.file);

  return customInstance<importOpenapiApiV1OpenapiOpenapiImportPostResponse>(
    getImportOpenapiApiV1OpenapiOpenapiImportPostUrl(),
    {
      ...options,
      method: "POST",
      body: formData,
    },
  );
};
