components:
  schemas:
    Body_import_openapi_api_v1_openapi_openapi_import_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_import_openapi_api_v1_openapi_openapi_import_post
      type: object
    ChangePassword:
      properties:
        new_password:
          anyOf:
          - type: string
          - type: 'null'
          description: The new password of the user
          title: New Password
        old_password:
          anyOf:
          - type: string
          - type: 'null'
          description: The old password of the user
          title: Old Password
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: The username of the user
          title: Username
      title: ChangePassword
      type: object
    Cors:
      properties:
        allow_credentials:
          title: Allow Credentials
          type: boolean
        allow_headers:
          items:
            type: string
          title: Allow Headers
          type: array
        allow_methods:
          items:
            type: string
          title: Allow Methods
          type: array
        allow_origins:
          items:
            type: string
          title: Allow Origins
          type: array
        expose_headers:
          items:
            type: string
          title: Expose Headers
          type: array
      required:
      - allow_origins
      - allow_credentials
      - allow_methods
      - allow_headers
      - expose_headers
      title: Cors
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HttpServer:
      properties:
        description:
          title: Description
          type: string
        name:
          title: Name
          type: string
        tools:
          items:
            type: string
          title: Tools
          type: array
        url:
          title: Url
          type: string
      required:
      - name
      - description
      - url
      - tools
      title: HttpServer
      type: object
    Login:
      properties:
        password:
          anyOf:
          - type: string
          - type: 'null'
          description: The password of the user
          title: Password
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: The username of the user
          title: Username
      title: Login
      type: object
    Mcp:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        deleted_at:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Deleted At
        http_servers:
          items:
            $ref: '#/components/schemas/HttpServer'
          title: Http Servers
          type: array
        name:
          title: Name
          type: string
        routers:
          items:
            $ref: '#/components/schemas/Router'
          title: Routers
          type: array
        servers:
          items:
            $ref: '#/components/schemas/McpServer'
          title: Servers
          type: array
        tenant_name:
          title: Tenant Name
          type: string
        tools:
          items:
            $ref: '#/components/schemas/Tool'
          title: Tools
          type: array
        updated_at:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated At
      required:
      - name
      - tenant_name
      - updated_at
      - created_at
      - deleted_at
      - servers
      - routers
      - tools
      - http_servers
      title: Mcp
      type: object
    McpConfigModel:
      properties:
        gmt_created:
          format: date-time
          title: Gmt Created
          type: string
        gmt_deleted:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Gmt Deleted
        gmt_updated:
          format: date-time
          title: Gmt Updated
          type: string
        http_servers:
          items:
            $ref: '#/components/schemas/HttpServer'
          title: Http Servers
          type: array
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        routers:
          items:
            $ref: '#/components/schemas/Router'
          title: Routers
          type: array
        servers:
          items:
            $ref: '#/components/schemas/McpServer'
          title: Servers
          type: array
        tenant_name:
          title: Tenant Name
          type: string
        tools:
          items:
            $ref: '#/components/schemas/Tool'
          title: Tools
          type: array
      required:
      - id
      - name
      - tenant_name
      - routers
      - servers
      - tools
      - http_servers
      - gmt_created
      - gmt_updated
      title: McpConfigModel
      type: object
    McpConfigName:
      description: MCP config name.
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        tenant_name:
          title: Tenant Name
          type: string
      required:
      - id
      - name
      - tenant_name
      title: McpConfigName
      type: object
    McpServer:
      properties:
        args:
          items:
            type: string
          title: Args
          type: array
        command:
          title: Command
          type: string
        description:
          title: Description
          type: string
        name:
          title: Name
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
        preinstalled:
          title: Preinstalled
          type: boolean
        type:
          $ref: '#/components/schemas/McpServerType'
        url:
          title: Url
          type: string
      required:
      - name
      - type
      - description
      - policy
      - command
      - preinstalled
      - url
      - args
      title: McpServer
      type: object
    McpServerType:
      enum:
      - sse
      - stdio
      title: McpServerType
      type: string
    PageResult:
      description: PageResult info
      properties:
        count:
          anyOf:
          - type: integer
          - type: 'null'
          description: The total count of items
          title: Count
        page_number:
          anyOf:
          - type: integer
          - type: 'null'
          description: The page number
          title: Page Number
        page_size:
          anyOf:
          - type: integer
          - type: 'null'
          description: The page size
          title: Page Size
      title: PageResult
      type: object
    Policy:
      enum:
      - on_start
      - on_demand
      title: Policy
      type: string
    Register:
      properties:
        confirm_password:
          description: The confirm password of the user
          minLength: 6
          title: Confirm Password
          type: string
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: The email of the user
          title: Email
        password:
          description: The password of the user
          minLength: 6
          title: Password
          type: string
        username:
          description: The username of the user
          maxLength: 50
          minLength: 2
          title: Username
          type: string
      required:
      - username
      - password
      - confirm_password
      title: Register
      type: object
    Router:
      properties:
        cors:
          anyOf:
          - $ref: '#/components/schemas/Cors'
          - type: 'null'
        prefix:
          title: Prefix
          type: string
        server:
          title: Server
          type: string
        sse_prefix:
          title: Sse Prefix
          type: string
      required:
      - prefix
      - server
      - sse_prefix
      title: Router
      type: object
    TenantCreate:
      description: 创建租户的数据结构
      properties:
        description:
          anyOf:
          - maxLength: 256
            type: string
          - type: 'null'
          description: 租户描述
          title: Description
        name:
          description: 租户名称
          maxLength: 256
          minLength: 1
          title: Name
          type: string
        prefix:
          anyOf:
          - maxLength: 256
            type: string
          - type: 'null'
          description: 租户前缀
          title: Prefix
      required:
      - name
      title: TenantCreate
      type: object
    TenantList:
      description: 租户列表数据结构
      properties:
        tenants:
          items:
            $ref: '#/components/schemas/TenantModel'
          title: Tenants
          type: array
        total:
          description: 总数量
          title: Total
          type: integer
      required:
      - tenants
      - total
      title: TenantList
      type: object
    TenantModel:
      description: 租户数据模型
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        gmt_created:
          format: date-time
          title: Gmt Created
          type: string
        gmt_updated:
          format: date-time
          title: Gmt Updated
          type: string
        id:
          title: Id
          type: string
        is_active:
          title: Is Active
          type: boolean
        name:
          title: Name
          type: string
        prefix:
          anyOf:
          - type: string
          - type: 'null'
          title: Prefix
      required:
      - id
      - name
      - is_active
      - gmt_created
      - gmt_updated
      title: TenantModel
      type: object
    TenantStatusUpdate:
      description: 租户状态更新数据结构
      properties:
        is_active:
          description: 是否激活
          title: Is Active
          type: boolean
      required:
      - is_active
      title: TenantStatusUpdate
      type: object
    TenantUpdate:
      description: 更新租户的数据结构
      properties:
        description:
          anyOf:
          - maxLength: 256
            type: string
          - type: 'null'
          description: 租户描述
          title: Description
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          description: 是否激活
          title: Is Active
        name:
          anyOf:
          - maxLength: 256
            minLength: 1
            type: string
          - type: 'null'
          description: 租户名称
          title: Name
        prefix:
          anyOf:
          - maxLength: 256
            type: string
          - type: 'null'
          description: 租户前缀
          title: Prefix
      title: TenantUpdate
      type: object
    Tool:
      properties:
        args:
          items:
            additionalProperties: true
            type: object
          title: Args
          type: array
        description:
          title: Description
          type: string
        headers:
          additionalProperties:
            type: string
          title: Headers
          type: object
        input_schema:
          additionalProperties: true
          title: Input Schema
          type: object
        method:
          title: Method
          type: string
        name:
          title: Name
          type: string
        path:
          title: Path
          type: string
        request_body:
          title: Request Body
          type: string
        response_body:
          title: Response Body
          type: string
      required:
      - name
      - description
      - method
      - path
      - headers
      - args
      - request_body
      - response_body
      - input_schema
      title: Tool
      type: object
    UserList:
      description: 用户列表响应
      properties:
        page_result:
          anyOf:
          - $ref: '#/components/schemas/PageResult'
          - type: 'null'
          description: 分页信息
        total:
          description: 用户总数
          title: Total
          type: integer
        users:
          description: 用户列表
          items:
            $ref: '#/components/schemas/UserSummary'
          title: Users
          type: array
      required:
      - users
      - total
      title: UserList
      type: object
    UserModel:
      description: 完整的用户信息模型
      properties:
        date_joined:
          description: 加入时间
          format: date-time
          title: Date Joined
          type: string
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: 邮箱
          title: Email
        gmt_created:
          description: 创建时间
          format: date-time
          title: Gmt Created
          type: string
        gmt_updated:
          description: 更新时间
          format: date-time
          title: Gmt Updated
          type: string
        id:
          description: 用户ID
          title: Id
          type: string
        is_active:
          description: 是否激活
          title: Is Active
          type: boolean
        is_staff:
          description: 是否为员工
          title: Is Staff
          type: boolean
        is_superuser:
          description: 是否为超级用户
          title: Is Superuser
          type: boolean
        is_verified:
          description: 是否已验证
          title: Is Verified
          type: boolean
        role:
          description: 用户角色
          title: Role
          type: string
        username:
          description: 用户名
          title: Username
          type: string
      required:
      - id
      - username
      - role
      - is_active
      - is_verified
      - is_staff
      - is_superuser
      - date_joined
      - gmt_created
      - gmt_updated
      title: UserModel
      type: object
    UserSummary:
      description: 用户简略信息
      properties:
        date_joined:
          description: 加入时间
          format: date-time
          title: Date Joined
          type: string
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: 邮箱
          title: Email
        id:
          description: 用户ID
          title: Id
          type: string
        is_active:
          description: 是否激活
          title: Is Active
          type: boolean
        role:
          description: 用户角色
          title: Role
          type: string
        username:
          description: 用户名
          title: Username
          type: string
      required:
      - id
      - username
      - role
      - is_active
      - date_joined
      title: UserSummary
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    APIKeyCookie:
      in: cookie
      name: session
      type: apiKey
info:
  title: API Server
  version: 0.1.0
openapi: 3.1.0
paths:
  /api/v1/auth/login:
    post:
      operationId: login_api_v1_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
  /api/v1/auth/logout:
    post:
      operationId: logout_api_v1_auth_logout_post
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Logout
  /api/v1/auth/register:
    post:
      operationId: register_api_v1_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Register
  /api/v1/auth/user:
    get:
      operationId: get_user_api_v1_auth_user_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: Successful Response
      security:
      - APIKeyCookie: []
      summary: Get User
  /api/v1/auth/users:
    get:
      operationId: list_users_api_v1_auth_users_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: Successful Response
      security:
      - APIKeyCookie: []
      summary: List Users
  /api/v1/auth/users/change-password:
    post:
      operationId: change_password_api_v1_auth_users_change_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Change Password
  /api/v1/auth/users/{user_id}:
    delete:
      operationId: delete_user_api_v1_auth_users__user_id__delete
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Delete User
  /api/v1/mcp/configs:
    get:
      description: 获取MCP配置列表
      operationId: list_mcp_configs_api_v1_mcp_configs_get
      parameters:
      - description: 租户ID
        in: query
        name: tenant_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 租户ID
          title: Tenant Name
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/McpConfigModel'
                title: Response List Mcp Configs Api V1 Mcp Configs Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: List Mcp Configs
    post:
      description: 创建MCP配置
      operationId: create_mcp_config_api_v1_mcp_configs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mcp'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McpConfigModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Create Mcp Config
    put:
      description: 更新MCP配置
      operationId: update_mcp_config_api_v1_mcp_configs_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mcp'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McpConfigModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Update Mcp Config
  /api/v1/mcp/configs/names:
    get:
      description: 获取MCP配置名称列表
      operationId: list_mcp_config_names_api_v1_mcp_configs_names_get
      parameters:
      - description: 租户ID
        in: query
        name: tenant_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 租户ID
          title: Tenant Name
      - description: 是否包含已删除的配置
        in: query
        name: include_deleted
        required: false
        schema:
          default: false
          description: 是否包含已删除的配置
          title: Include Deleted
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/McpConfigName'
                title: Response List Mcp Config Names Api V1 Mcp Configs Names Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: List Mcp Config Names
  /api/v1/mcp/configs/{config_id}/sync:
    post:
      description: 同步MCP配置
      operationId: sync_mcp_config_api_v1_mcp_configs__config_id__sync_post
      parameters:
      - in: path
        name: config_id
        required: true
        schema:
          title: Config Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Sync Mcp Config
  /api/v1/mcp/configs/{tenant_name}/{name}:
    delete:
      description: 删除MCP配置
      operationId: delete_mcp_config_api_v1_mcp_configs__tenant_name___name__delete
      parameters:
      - in: path
        name: tenant_name
        required: true
        schema:
          title: Tenant Name
          type: string
      - in: path
        name: name
        required: true
        schema:
          title: Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Delete Mcp Config
  /api/v1/mcp/{tenant_name}/{name}/active:
    post:
      description: 激活MCP配置
      operationId: active_mcp_config_api_v1_mcp__tenant_name___name__active_post
      parameters:
      - in: path
        name: tenant_name
        required: true
        schema:
          title: Tenant Name
          type: string
      - in: path
        name: name
        required: true
        schema:
          title: Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Active Mcp Config
  /api/v1/openapi/openapi/import:
    post:
      operationId: import_openapi_api_v1_openapi_openapi_import_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_openapi_api_v1_openapi_openapi_import_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Import Openapi
  /api/v1/tenant/tenants:
    get:
      description: 获取租户列表
      operationId: list_tenants_api_v1_tenant_tenants_get
      parameters:
      - description: 是否包含未激活的租户
        in: query
        name: include_inactive
        required: false
        schema:
          default: false
          description: 是否包含未激活的租户
          title: Include Inactive
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: List Tenants
    post:
      description: 创建租户
      operationId: create_tenant_api_v1_tenant_tenants_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Create Tenant
  /api/v1/tenant/tenants/name/{tenant_name}:
    get:
      description: 根据名称获取租户信息
      operationId: get_tenant_by_name_api_v1_tenant_tenants_name__tenant_name__get
      parameters:
      - in: path
        name: tenant_name
        required: true
        schema:
          title: Tenant Name
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Get Tenant By Name
  /api/v1/tenant/tenants/{tenant_id}:
    delete:
      description: 删除租户
      operationId: delete_tenant_api_v1_tenant_tenants__tenant_id__delete
      parameters:
      - in: path
        name: tenant_id
        required: true
        schema:
          title: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Delete Tenant
    get:
      description: 获取单个租户信息
      operationId: get_tenant_api_v1_tenant_tenants__tenant_id__get
      parameters:
      - in: path
        name: tenant_id
        required: true
        schema:
          title: Tenant Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Get Tenant
    put:
      description: 更新租户信息
      operationId: update_tenant_api_v1_tenant_tenants__tenant_id__put
      parameters:
      - in: path
        name: tenant_id
        required: true
        schema:
          title: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Update Tenant
  /api/v1/tenant/tenants/{tenant_id}/status:
    patch:
      description: 更新租户启用状态
      operationId: update_tenant_status_api_v1_tenant_tenants__tenant_id__status_patch
      parameters:
      - in: path
        name: tenant_id
        required: true
        schema:
          title: Tenant Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantStatusUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      summary: Update Tenant Status
