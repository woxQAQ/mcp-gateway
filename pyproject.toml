[project]
name = "myunla"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiomysql>=0.2.0",
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "black>=25.1.0",
    "fastapi>=0.115.14",
    "fastapi-users>=14.0.1",
    "fastapi-users-db-sqlalchemy>=7.0.0",
    "httpx>=0.28.1",
    "isort>=6.0.1",
    "jinja2>=3.1.6",
    "mcp>=1.10.1",
    "mypy>=1.16.1",
    "openapi-core>=0.19.5",
    "pre-commit>=4.2.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=0.24.0",
    "pyyaml>=6.0.2",
    "ruff>=0.12.1",
    "sqlalchemy>=2.0.41",
    "uvicorn>=0.35.0",
]

[tool.black]
line-length = 80
skip-string-normalization = true
target-version = ["py39", "py310", "py311", "py312", "py313"]

[tool.ruff]
line-length = 80
target-version = "py313"

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint]
select = [
    # Pycodestyle
    "E",
    "W",

    # Pyflakes
    "F",

    # Isort
    "I",

    # Comprehensions
    "C4",

    # Debugger
    "T100",

    # Pyupgrade
    "UP",

    # Flake8-pyi
    "PYI",

    # NumPy-specific rules
    "NPY001",
    "NPY003",
    "NPY201",

    # Bugbear
    "B002",
    "B003",
    "B004",
    "B005",
    "B009",
    "B010",
    "B011",
    "B012",
    "B013",
    "B014",
    "B015",
    "B016",
    "B017",
    "B018",
    "B019",
    "B020",
    "B021",
    "B022",
    "B025",
    "B029",
    "B032",

    # Pylint
    "PLE",
    "PLC3002",
    "PLR0206",
    "PLR0402",
    "PLR1711",
    "PLR1722",
    "PLW3301",

    # Flake8-simplify
    "SIM101",

    # Pygrep-hooks
    "PGH004",

    # Flake8-type-checking
    "TC",

    # Ruff-specific rules
    "RUF005",
    "RUF008",
    "RUF009",
    "RUF010",
    "RUF013",
    "RUF015",
    "RUF016",
    "RUF017",
    "RUF018",
    "RUF019",
    "RUF020",
    "RUF024",
    "RUF026",
    "RUF100",

    # Flake8-raise
    "RSE",

    # Flake8-quotes
    "Q003",
    "Q004",

    # Refurb
    "FURB",

    # Flake8-future-annotations
    "FA",
]
unfixable = [
    "NPY001"
]
ignore = [
    # Whitespace before ‘,’, ‘;’, or ‘:’, it is not compatible with black
    "E203",
    # Module level import not at top of file
    "E402",
    # Line too long (82 > 79 characters)
    "E501",
    # Do not compare types, use `isinstance()`
    "E721",
    # Do not use bare except, specify exception instead
    "E722",
    # Do not assign a lambda expression, use a def
    "E731",
    # Do not use variables named ‘l’, ‘O’, or ‘I’
    "E741",
    # `name` may be undefined, or defined from star imports: `module`
    "F405",
    # Local variable name is assigned to but never used
    "F841",
    # It not met the "Explicit is better than implicit" rule
    "UP015",
    "UP045",
    # It will cause the performance regression on python3.10
    "UP038",
    # collections.namedtuple can be quickly created a inlined class
    "PYI024",
    # `__all__.append` is a common pattern in Paddle
    "PYI056",
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
python_version = "3.9"
cache_dir = ".mypy_cache"
# Miscellaneous strictness flags
allow_redefinition = true
local_partial_types = true
strict = false
# Untyped definitions and calls
check_untyped_defs = true
# Import discovery
follow_imports = "normal"
# Miscellaneous
warn_unused_configs = true
# Disallow generic without type arguments
disallow_any_generics = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
# Configuring error messages
show_column_numbers = true
