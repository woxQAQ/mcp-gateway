"""empty message

Revision ID: e33f449b3963
Revises: b69f9797db65
Create Date: 2025-07-09 01:33:11.676990

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'e33f449b3963'
down_revision: Union[str, Sequence[str], None] = 'b69f9797db65'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'mcp_config',
        sa.Column('tenant_name', sa.String(length=24), nullable=False),
    )
    op.drop_constraint(
        op.f('uidx_mcp_config_name_tenant_id'), 'mcp_config', type_='unique'
    )
    op.create_unique_constraint(
        'uidx_mcp_config_name_tenant_name',
        'mcp_config',
        ['name', 'tenant_name'],
    )
    op.drop_column('mcp_config', 'tenant_id')
    op.create_unique_constraint('uidx_user_email', 'user', ['email'])
    op.add_column(
        'user_tenant',
        sa.Column('tenant_name', sa.String(length=24), nullable=False),
    )
    op.drop_constraint(
        op.f('uidx_user_tenant_user_id_tenant_id'),
        'user_tenant',
        type_='unique',
    )
    op.create_unique_constraint(
        'uidx_user_tenant_user_id_tenant_name',
        'user_tenant',
        ['user_id', 'tenant_name'],
    )
    op.drop_column('user_tenant', 'tenant_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'user_tenant',
        sa.Column('tenant_id', sa.VARCHAR(length=24), nullable=False),
    )
    op.drop_constraint(
        'uidx_user_tenant_user_id_tenant_name', 'user_tenant', type_='unique'
    )
    op.create_unique_constraint(
        op.f('uidx_user_tenant_user_id_tenant_id'),
        'user_tenant',
        ['user_id', 'tenant_id'],
    )
    op.drop_column('user_tenant', 'tenant_name')
    op.drop_constraint('uidx_user_email', 'user', type_='unique')
    op.add_column(
        'mcp_config',
        sa.Column('tenant_id', sa.VARCHAR(length=24), nullable=False),
    )
    op.drop_constraint(
        'uidx_mcp_config_name_tenant_name', 'mcp_config', type_='unique'
    )
    op.create_unique_constraint(
        op.f('uidx_mcp_config_name_tenant_id'),
        'mcp_config',
        ['name', 'tenant_id'],
    )
    op.drop_column('mcp_config', 'tenant_name')
    # ### end Alembic commands ###
