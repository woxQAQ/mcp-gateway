"""empty message

Revision ID: 73dfe2c12e33
Revises:
Create Date: 2025-07-10 00:22:02.992191

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '73dfe2c12e33'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'audit_log',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column(
            'user_id', sa.String(length=36), nullable=True, comment='User ID'
        ),
        sa.Column(
            'username', sa.String(length=255), nullable=True, comment='Username'
        ),
        sa.Column(
            'resource_type',
            sa.Enum(
                'collection',
                'document',
                'bot',
                'chat',
                'message',
                'api_key',
                'llm_provider',
                'llm_provider_model',
                'model_service_provider',
                'user',
                'config',
                'invitation',
                'auth',
                'chat_completion',
                'search',
                'llm',
                'flow',
                'system',
                name='auditresource',
            ),
            nullable=True,
            comment='Resource type',
        ),
        sa.Column(
            'resource_id',
            sa.String(length=255),
            nullable=True,
            comment='Resource ID (extracted at query time)',
        ),
        sa.Column(
            'api_name',
            sa.String(length=255),
            nullable=False,
            comment='API operation name',
        ),
        sa.Column(
            'http_method',
            sa.String(length=10),
            nullable=False,
            comment='HTTP method (POST, PUT, DELETE)',
        ),
        sa.Column(
            'path', sa.String(length=512), nullable=False, comment='API path'
        ),
        sa.Column(
            'status_code',
            sa.Integer(),
            nullable=True,
            comment='HTTP status code',
        ),
        sa.Column(
            'request_data',
            sa.Text(),
            nullable=True,
            comment='Request data (JSON)',
        ),
        sa.Column(
            'response_data',
            sa.Text(),
            nullable=True,
            comment='Response data (JSON)',
        ),
        sa.Column(
            'error_message',
            sa.Text(),
            nullable=True,
            comment='Error message if failed',
        ),
        sa.Column(
            'ip_address',
            sa.String(length=45),
            nullable=True,
            comment='Client IP address',
        ),
        sa.Column(
            'user_agent',
            sa.String(length=500),
            nullable=True,
            comment='User agent string',
        ),
        sa.Column(
            'request_id',
            sa.String(length=255),
            nullable=False,
            comment='Request ID for tracking',
        ),
        sa.Column(
            'start_time',
            sa.BigInteger(),
            nullable=False,
            comment='Request start time (milliseconds since epoch)',
        ),
        sa.Column(
            'end_time',
            sa.BigInteger(),
            nullable=True,
            comment='Request end time (milliseconds since epoch)',
        ),
        sa.Column(
            'gmt_created',
            sa.DateTime(timezone=True),
            nullable=False,
            comment='Created time',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index('idx_audit_api_name', ['api_name'], unique=False)
        batch_op.create_index(
            'idx_audit_gmt_created', ['gmt_created'], unique=False
        )
        batch_op.create_index(
            'idx_audit_http_method', ['http_method'], unique=False
        )
        batch_op.create_index(
            'idx_audit_request_id', ['request_id'], unique=False
        )
        batch_op.create_index(
            'idx_audit_resource_id', ['resource_id'], unique=False
        )
        batch_op.create_index(
            'idx_audit_resource_type', ['resource_type'], unique=False
        )
        batch_op.create_index(
            'idx_audit_start_time', ['start_time'], unique=False
        )
        batch_op.create_index(
            'idx_audit_status_code', ['status_code'], unique=False
        )
        batch_op.create_index('idx_audit_user_id', ['user_id'], unique=False)

    op.create_table(
        'mcp_config',
        sa.Column('id', sa.String(length=24), nullable=False),
        sa.Column('name', sa.String(length=256), nullable=True),
        sa.Column('tenant_name', sa.String(length=24), nullable=False),
        sa.Column('routers', sa.JSON(), nullable=False),
        sa.Column('servers', sa.JSON(), nullable=False),
        sa.Column('tools', sa.JSON(), nullable=False),
        sa.Column('http_servers', sa.JSON(), nullable=False),
        sa.Column('gmt_created', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_updated', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_deleted', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint(
            'name', 'tenant_name', name='uidx_mcp_config_name_tenant_name'
        ),
    )
    with op.batch_alter_table('mcp_config', schema=None) as batch_op:
        batch_op.create_index(
            'idx_mcp_config_deleted_at', ['gmt_deleted'], unique=False
        )

    op.create_table(
        'tenant',
        sa.Column('id', sa.String(length=24), nullable=False),
        sa.Column('name', sa.String(length=256), nullable=True),
        sa.Column('prefix', sa.String(length=256), nullable=True),
        sa.Column('description', sa.String(length=256), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('gmt_created', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_updated', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', name='uidx_tenant_name'),
        sa.UniqueConstraint('prefix', name='uidx_tenant_prefix'),
    )
    op.create_table(
        'user',
        sa.Column('id', sa.String(length=24), nullable=False),
        sa.Column('username', sa.String(length=256), nullable=False),
        sa.Column('email', sa.String(length=254), nullable=True),
        sa.Column('hashed_password', sa.String(length=128), nullable=False),
        sa.Column(
            'role', sa.Enum('normal', 'admin', name='role'), nullable=False
        ),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.Column('is_staff', sa.Boolean(), nullable=False),
        sa.Column('date_joined', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_created', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_updated', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_deleted', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('email', name='uidx_user_email'),
        sa.UniqueConstraint('username'),
    )
    op.create_table(
        'user_tenant',
        sa.Column('id', sa.String(length=24), nullable=False),
        sa.Column('user_id', sa.String(length=24), nullable=False),
        sa.Column('tenant_name', sa.String(length=24), nullable=False),
        sa.Column('gmt_created', sa.DateTime(timezone=True), nullable=False),
        sa.Column('gmt_updated', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint(
            'user_id',
            'tenant_name',
            name='uidx_user_tenant_user_id_tenant_name',
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_tenant')
    op.drop_table('user')
    op.drop_table('tenant')
    with op.batch_alter_table('mcp_config', schema=None) as batch_op:
        batch_op.drop_index('idx_mcp_config_deleted_at')

    op.drop_table('mcp_config')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_index('idx_audit_user_id')
        batch_op.drop_index('idx_audit_status_code')
        batch_op.drop_index('idx_audit_start_time')
        batch_op.drop_index('idx_audit_resource_type')
        batch_op.drop_index('idx_audit_resource_id')
        batch_op.drop_index('idx_audit_request_id')
        batch_op.drop_index('idx_audit_http_method')
        batch_op.drop_index('idx_audit_gmt_created')
        batch_op.drop_index('idx_audit_api_name')

    op.drop_table('audit_log')
    # ### end Alembic commands ###
